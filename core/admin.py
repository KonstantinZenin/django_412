from django.contrib import admin
from .models import Order, Master, Service, Review

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
admin.site.register(Order)
admin.site.register(Service)
admin.site.register(Review)


# –ö–ª–∞—Å—Å –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –º–∞—Å—Ç–µ—Ä–∞
# –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
class RatingFilter(admin.SimpleListFilter):
    # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ URL
    parameter_name = 'avg_rating'
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –≤ –∞–¥–º–∏–Ω–∫–µ
    title = '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥'
    
    def lookups(self, request, model_admin):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω–∫–µ"""
        return (
            ('no_rating', '‚ùå'),
            ('low', '‚≠ê‚≠ê'),
            ('medium', '‚≠ê‚≠ê‚≠ê'),
            ('high', '‚≠ê‚≠ê‚≠ê‚≠ê'),
            ('perfect', '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê'),
        )
    
    def queryset(self, request, queryset):
        """–õ–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é"""
        # –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω —Ñ–∏–ª—å—Ç—Ä, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
        if not self.value():
            return queryset
            
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        filtered_masters = []
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        for master in queryset:
            rating = master.avg_rating()
            
            if self.value() == 'no_rating' and rating == 0:
                filtered_masters.append(master.pk)
            elif self.value() == 'low' and 0 < rating < 3:
                filtered_masters.append(master.pk)
            elif self.value() == 'medium' and 3 <= rating < 4:
                filtered_masters.append(master.pk)
            elif self.value() == 'high' and 4 <= rating < 5:
                filtered_masters.append(master.pk)
            elif self.value() == 'perfect' and rating == 5:
                filtered_masters.append(master.pk)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π queryset
        return queryset.filter(pk__in=filtered_masters)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∞–¥–º–∏–Ω–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–∏ Master
class MasterAdmin(admin.ModelAdmin):
    list_display = (
        "first_name",
        "last_name",
        "phone",
        "experience",
        "is_active",
        "avg_rating_display",
    )
    list_display_links = ("first_name", "last_name")
    list_filter = ("is_active", "services", "experience", RatingFilter)
    search_fields = ("first_name", "last_name", "phone")
    ordering = ("last_name", "first_name")
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ –ø–æ–ª—è –≤ –∞–¥–º–∏–Ω–∫–µ(–Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ list_display_links)
    list_editable = ("is_active", "experience")
    # —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∞–¥–º–∏–Ω–∫–µ
    actions = ["make_active", "make_inactive"]
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä–∞ (—Å–∫–æ–ª—å–∫–æ –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
    list_per_page = 25

    # –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞
    readonly_fields = ("view_count",)


# –ö–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç —É –ø–æ–ª—è –≤ –∞–¥–º–∏–Ω–∫–µ
    @admin.display(description="–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞")
    def avg_rating_display(self, obj) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–∏"""
        # Obj = –≠–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–µ–ª–∏ Master
        rating = obj.avg_rating()
        if 0 < rating < 1:
            return "üéÉ"
        elif 1 <= rating < 2:
            return "‚≠ê"
        elif 2 <= rating < 3:
            return "‚≠ê‚≠ê"
        elif 3 <= rating < 4:
            return "‚≠ê‚≠ê‚≠ê"
        elif 4 <= rating < 5:
            return "‚≠ê‚≠ê‚≠ê‚≠ê"
        elif rating == 5:
            return "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"
        else:
            return "‚ùå"
        
    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ(—Å–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º)
    @admin.action(description="–°–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º–∏")
    def make_active(self, request, queryset):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö"""
        queryset.update(is_active=True)

    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ(—Å–¥–µ–ª–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏)
    @admin.action(description="–°–¥–µ–ª–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏")
    def make_inactive(self, request, queryset):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"""
        queryset.update(is_active=False)


admin.site.register(Master, MasterAdmin)
